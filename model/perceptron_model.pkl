import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
import joblib

# Đọc dữ liệu từ file CSV
data = pd.read_csv('data.csv', sep=';')

# Chọn các thuộc tính và nhãn
X = data[['Weight (kg)', 'Height (cm)', 'Body Length (cm)', 'Has Horns', 'Fur Color', 'Lays Eggs', 'Age (years)']]
y = data['Gender']

# Tải lại label encoders từ file
label_encoders = joblib.load(r'C:\Classification\Artifact\label_encoders.pkl')

# Chuyển đổi các giá trị phân loại thành số cho X
for column in ['Has Horns', 'Fur Color', 'Lays Eggs']:
    X[column] = label_encoders[column].transform(X[column])

# Chia dữ liệu thành tập huấn luyện và tập kiểm tra
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Tiêu chuẩn hóa dữ liệu
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Hàm huấn luyện mô hình Perceptron
def perceptron(X, y, learning_rate=0.01, epochs=1000):
    m, n = X.shape
    weights = np.zeros(n)
    bias = 0

    for _ in range(epochs):
        for i in range(m):
            linear_output = np.dot(X[i], weights) + bias
            y_predicted = np.where(linear_output >= 0, 'Male', 'Female')  # Dự đoán
            
            # Cập nhật trọng số
            update = learning_rate * (y[i] - y_predicted)
            weights += update * X[i]
            bias += update

    return weights, bias

# Huấn luyện mô hình
weights, bias = perceptron(X_train, y_train.values)

# Dự đoán trên tập kiểm tra
linear_output = np.dot(X_test, weights) + bias
y_pred = np.where(linear_output >= 0, 'Male', 'Female')

# Tính toán chỉ số accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

# Lưu mô hình
joblib.dump((weights, bias), r'C:\Classification\model\perceptron_model.pkl')
joblib.dump(scaler, r'C:\Classification\Artifact\scaler.pkl')
